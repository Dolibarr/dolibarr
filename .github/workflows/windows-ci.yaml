---
name: Win CI
on:
  push:
    # branches:
    #  - main
  pull_request:
    # branches:
    #  - main
  workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
        #php_version: [7.4, 8.0] # Add more versions if needed
        php_version: [7.4] # Add more versions if needed
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MariaDB
        uses: ankane/setup-mariadb@v1
        with:
          # mariadb-version: ${{ matrix.mariadb-version }}
          database: travis # Specify your database name

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          # ini-values: post_max_size=256M, max_execution_time=180
          extensions: >
            calendar, gd, imagick, imap, intl, json, ldap, mbstring,
            mcrypt, mysql, mysqli, opcache, pgsql, sqlite3, xml, zip
          tools: >
            composer,
            phpunit:9.5
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # phpts: ts  # ts for thread-safe, default nts

      - name: Get composer cache directory
        id: composer-cache
        if: false
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        if: false
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: false
        run: |
          composer -n config -g vendor-dir htdocs/includes
          # composer self-update 2.4.4
          composer -n require \
                        php-parallel-lint/php-parallel-lint ^1.2 \
                        php-parallel-lint/php-console-highlighter ^0 \
                        php-parallel-lint/php-var-dump-check ~0.4
          # which phpunit phpcs php-parallel-lint
      - run: |
          where php
          php -v
          php -r 'phpinfo();'
          echo ok

      - name: "Windows: Cygwin download"
        if: false && runner.os == 'Windows'
        run: |
          Invoke-WebRequest 'https://cygwin.com/setup-x86_64.exe' -OutFile 'setup-x86_64.exe'

      - name: "Windows: Cygwin setup"
        if: false && runner.os == 'Windows'
        shell: cmd
        #run: .\setup-x86_64.exe --quiet-mode --site http://cygwin.mirror.constant.com --symlink-type=sys --packages mingw64-i686-binutils=2.37-2,mingw64-x86_64-binutils=2.37-2,curl,diffutils,git,m4,make,mercurial,mingw64-i686-gcc-core,mingw64-i686-gcc-g++,mingw64-x86_64-gcc-core,mingw64-x86_64-gcc-g++,patch,perl,rsync,unzip
        run: .\setup-x86_64.exe --quiet-mode --site http://cygwin.mirror.constant.com --symlink-type=sys --packages sed

      - name: Setup MSYS (provides 'bash' and other unix-tools on windows)
        uses: msys2/setup-msys2@v2
        if: false
        with:
          path-type: inherit
          cache: true
          release: false
          msystem: UCRT64
          update: false
          install: git mingw-w64-ucrt-x86_64-gcc

      - name: Run Bash script
        # shell: msys2 {0}
        shell: bash
        run: |
          # Replace the following commands with your bash script commands
          # Example:
          # ./script.sh arg1 arg2
          # would be
          # bash script.sh arg1 arg2
          # env
          php -r 'phpinfo();'
          ${SHELL} -xv dev/setup/phpunit/setup_conf.sh
          sed -i -e 's/stopOnFailure="[^"]*"/stopOnFailure="false"/' test/phpunit/phpunittest.xml

      - name: Run PHPUnit tests
        shell: cmd
        run: |-
          php --ini
          SET PHP_INI_SCAN_DIR=C:\myphpini
          SET INIFILE="C:\myphpini\dolibarr.ini"
          mkdir c:\myphpini
          echo [php] > %INIFILE%
          echo open_basedir^="%CD%;%PHPROOT%" >> %INIFILE%
          type %INIFILE%
          php --ini
          php "%PHPROOT%\phpunit" -d memory_limit=-1 -c "test\phpunit\phpunittest.xml" "test\phpunit\AllTests.php"
