pipeline {
   agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: phpstan
            image: iyedbnaissa/phpstan:4
            command:
            - cat
            tty: true
          - name: docker
            image: docker:latest
            command:
            - cat
            tty: true
            volumeMounts:
             - mountPath: /var/run/docker.sock
               name: docker-sock
          volumes:
          - name: docker-sock
            hostPath:
              path: /var/run/docker.sock    
        '''
    }
  }
  stages {
    stage('SCM') {
      steps {
        checkout scm
      }
    }

   stage(phpstan_scan){
      steps{
        container('phpstan'){
          script{
            // Create directory for reports
            sh "mkdir -p test-reports"
            // Run PHPStan inside PHPStan container
            sh "phpstan -vvv analyse --error-format=json --xdebug -a build/phpstan/bootstrap_action.php --config phpstan.neon.dist > test-reports/phpstan-report.json"
          }
        }
      }
    }
    stage('SonarQube Analysis') {
      environment {
             SONAR_SCANNER_OPTS = "-Xmx512m"
      }
      steps {
        script {
          def scannerHome = tool 'SonarQube_Scanner';
          // Execute SonarQube analysis
          withSonarQubeEnv('SonarQube_Server') {
           
            sh "${scannerHome}/bin/sonar-scanner -Dproject.settings=sonar-project.properties"
          }
        }
      }
    }
    
  }
}
