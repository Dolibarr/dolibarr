# Default values for dolibarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global parameters

global:
  ## @param global.imageRegistry Global Docker image registry
  imageRegistry: ""

  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  imagePullSecrets: []

## @section Common parameters

## @param kubeVersion Override Kubernetes version
kubeVersion: ""

## @param nameOverride Partially override `dolibarr.fullname` template with a string (will prepend the release name)
nameOverride: ""

## @param fullnameOverride Fully override `dolibarr.fullname` template with a string
fullnameOverride: ""

## @param commonAnnotations Annotations to add to all deployed objects
commonAnnotations: {}

## @param commonLabels Labels to add to all deployed objects
commonLabels: {}

## @param extraDeploy Array of extra objects to deploy with the release
extraDeploy: []

## @section Parameters

## @param replicaCount Number of replicas (do not change it)
replicaCount: 1

updateStrategy:
  ## @param updateStrategy.type Update strategy type (do not change it)
  type: Recreate

image:
  ## @param image.registry Image registry
  registry: docker.io

  ## @param image.repository Image repository
  repository: iyedbnaissa/dolibarr_build

  ## @param image.tag Image tag
  tag: ""

  ## @param image.digest Image digest
  digest: ""

  ## @param image.pullPolicy Image pull policy
  pullPolicy: IfNotPresent

pdb:
  ## @param pdb.create Specifies whether a pod disruption budget should be created
  create: false

  ## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  minAvailable: 1

  ## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  maxUnavailable:
  # maxUnavailable: 1

serviceAccount:
  ## @param serviceAccount.create Specifies whether a service account should be created
  create: true

  ## @param serviceAccount.annotations Service account annotations
  annotations: {}

  ## @param serviceAccount.name The name of the service account to use (Generated using the `dolibarr.fullname` template if not set)
  name:

## @param podAnnotations Additional pod annotations
podAnnotations: {}

## @param podLabels Additional pod labels
podLabels: {}

## @param podSecurityContext Pod security context
podSecurityContext: {}
  # fsGroup: 2000

## @param priorityClassName Priority class name
priorityClassName:
# priorityClassName : high-priority

## @param runtimeClassName Runtime class name
runtimeClassName: ""

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
topologySpreadConstraints: []

## @param securityContext Container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPorts:
  ## @param containerPorts.http Container port for HTTP
  http: 80

livenessProbe:
  ## @param livenessProbe.enabled Enable liveness probe
  enabled: true

  ## @param livenessProbe.initialDelaySeconds Delay before the liveness probe is initiated
  initialDelaySeconds: 180

  ## @param livenessProbe.periodSeconds How often to perform the liveness probe
  periodSeconds: 10

  ## @param livenessProbe.timeoutSeconds When the liveness probe times out
  timeoutSeconds: 1

  ## @param livenessProbe.failureThreshold Minimum consecutive failures for the liveness probe to be considered failed after having succeeded
  failureThreshold: 3

  ## @param livenessProbe.successThreshold Minimum consecutive successes for the liveness probe to be considered successful after having failed
  successThreshold: 1

readinessProbe:
  ## @param readinessProbe.enabled Enable readiness probe
  enabled: true

  ## @param readinessProbe.initialDelaySeconds Delay before the readiness probe is initiated
  initialDelaySeconds: 0

  ## @param readinessProbe.periodSeconds How often to perform the readiness probe
  periodSeconds: 10

  ## @param readinessProbe.timeoutSeconds When the readiness probe times out
  timeoutSeconds: 1

  ## @param readinessProbe.failureThreshold Minimum consecutive failures for the readiness probe to be considered failed after having succeeded
  failureThreshold: 3

  ## @param readinessProbe.successThreshold Minimum consecutive successes for the readiness probe to be considered successful after having failed
  successThreshold: 1

startupProbe:
  ## @param startupProbe.enabled Enable startup probe
  enabled: false

  ## @param startupProbe.initialDelaySeconds Delay before the startup probe is initiated
  initialDelaySeconds: 0

  ## @param startupProbe.periodSeconds How often to perform the startup probe
  periodSeconds: 10

  ## @param startupProbe.timeoutSeconds When the startup probe times out
  timeoutSeconds: 1

  ## @param startupProbe.failureThreshold Minimum consecutive failures for the startup probe to be considered failed after having succeeded
  failureThreshold: 3

  ## @param startupProbe.successThreshold Minimum consecutive successes for the startup probe to be considered successful after having failed
  successThreshold: 1

service:
  ## @param service.annotations Service annotations
  annotations: {}

  ## @param service.type Service type
  type: ClusterIP

  ## @param service.clusterIP Static cluster IP address or None for headless service when service type is ClusterIP
  clusterIP:
  # clusterIP: 10.43.0.100

  ## @param service.loadBalancerIP Static load balancer IP address when service type is LoadBalancer
  loadBalancerIP:
  # loadBalancerIP: 10.0.0.100

  ## @param service.loadBalancerSourceRanges Source IP address ranges when service type is LoadBalancer
  loadBalancerSourceRanges:
    # - 10.0.0.0/24

  ## @param service.externalTrafficPolicy External traffic routing policy when service type is LoadBalancer or NodePort
  externalTrafficPolicy: Cluster

  ports:
    ## @param service.ports.http Service port for HTTP
    http: 80

  nodePorts:
    ## @param service.nodePorts.http Service node port for HTTP when service type is LoadBalancer or NodePort
    http:
    # http: 30000

ingress:
  ## @param ingress.enabled Enable ingress controller resource
  enabled: false

  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress
  ingressClassName: "nginx"

  ## @param ingress.pathType Ingress path type
  pathType: ImplementationSpecific

  ## @param ingress.annotations Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## @param ingress.hosts[0].host Hostname to your Dolibarr installation
  ## @param ingress.hosts[0].paths Paths within the url structure
  hosts:
    - host: dolibarr.hbenaissa.uk
      paths:
        - /

  ## @param ingress.tls TLS configuration
  tls: []
    # - secretName: dolibarr-tls
    #   hosts:
    #     - dolibarr.local

## @param resources CPU/Memory resource requests/limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @param nodeSelector Node labels for pod assignment
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
tolerations: []

## @param affinity Map of node/pod affinities
affinity: {}

## @param extraArgs Additional container arguments
extraArgs: {}
  # name: ""

## @param extraEnvVars Additional container environment variables
extraEnvVars: []
  # - name: MY-NAME
  #   value: "MY-VALUE"

## @param extraEnvVarsCM Name of existing ConfigMap containing additional container environment variables
extraEnvVarsCM:

## @param extraEnvVarsSecret Name of existing Secret containing additional container environment variables
extraEnvVarsSecret:

init:
  ## @param init.securityContext Init security context
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## @param init.resources Init CPU/Memory resource requests/limits
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

persistence:
  ## @param persistence.enabled Enable persistence using PVC
  enabled: false

  ## @param persistence.existingClaim Name of an existing PVC to use
  existingClaim:
  # existingClaim: my-pvc

  ## @param persistence.accessMode PVC access mode
  accessMode: ReadWriteOnce

  ## @param persistence.annotations PVC annotations
  annotations: {}

  ## @param persistence.size PVC size
  size: 1Gi

  ## @param persistence.storageClass PVC storage class
  storageClass:
  # storageClass: -

## @section Config parameters

dolibarr:
  admin:
    ## @param dolibarr.admin.username Administrator username
    username: admin

    ## @param dolibarr.admin.password Administrator password
    password: admin

  ## @param dolibarr.externalUrl External URL
  externalUrl: http://dolibarr.local

  cron:
    ## @param dolibarr.cron.enabled Enable cron for scheduled jobs
    enabled: false

    ## @param dolibarr.cron.username Cron username
    username: admin

    ## @param dolibarr.cron.securityKey Cron security key
    securityKey: ""

## @param existingSecret Name of existing Secret to use
existingSecret: ""

## @param existingSecretKeyAdminPassword Key in existing Secret that contains administrator password
existingSecretKeyAdminPassword: dolibarr-admin-password

## @param existingSecretKeyCronSecurityKey Key in existing Secret that contains cron security key
existingSecretKeyCronSecurityKey: dolibarr-cron-security-key

## @section MariaDB parameters

mariadb:
  ## @param mariadb.enabled Whether to use the MariaDB chart
  enabled: true

  ## @param mariadb.architecture MariaDB architecture
  architecture: standalone

  auth:
    ## @param mariadb.auth.database MariaDB database
    database: dolibarr

    ## @param mariadb.auth.username MariaDB user
    username: dolibarr

    ## @param mariadb.auth.password MariaDB password
    password: dolibarr

    ## @param mariadb.auth.existingSecret Name of existing Secret to use
    existingSecret: ""

  primary:
    service:
      ports:
        ## @param mariadb.primary.service.ports.mysql MariaDB port
        mysql: 3306

externalMariadb:
  ## @param externalMariadb.enabled Whether to use an external MariaDB
  enabled: false

  ## @param externalMariadb.host External MariaDB host
  host: mariadb

  ## @param externalMariadb.port External MariaDB port
  port: 3306

  ## @param externalMariadb.username External MariaDB user
  username: dolibarr

  ## @param externalMariadb.password External MariaDB password
  password: dolibarr

  ## @param externalMariadb.existingSecret Name of existing Secret to use
  existingSecret: ""

  ## @param externalMariadb.existingSecretKeyPassword Key in existing Secret that contains MariaDB password
  existingSecretKeyPassword: mariadb-password

  ## @param externalMariadb.database External MariaDB database
  database: dolibarr

## @section Wait parameters

wait:
  image:
    ## @param wait.image.registry Image registry
    registry: docker.io

    ## @param wait.image.repository Image repository
    repository: atkrad/wait4x

    ## @param wait.image.tag Image tag
    tag: 2.14.0

    ## @param wait.image.digest Image digest
    digest: ""

    ## @param wait.image.pullPolicy Image pull policy
    pullPolicy: IfNotPresent

  ## @param wait.securityContext Container security context
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## @param wait.resources CPU/Memory resource requests/limits
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

## @section Tests parameters

tests:
  image:
    ## @param tests.image.registry Image registry
    registry: ghcr.io

    ## @param tests.image.repository Image repository
    repository: cowboysysop/pytest

    ## @param tests.image.tag Image tag
    tag: 1.0.41

    ## @param tests.image.digest Image digest
    digest: ""

    ## @param tests.image.pullPolicy Image pull policy
    pullPolicy: IfNotPresent
