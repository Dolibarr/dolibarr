# Dolibarr language file - en_US - exports
CHARSET=UTF-8
ExportsArea=Exports area
ImportArea=Import area
NewExport=New export
NewImport=New import
ExportableDatas=Exportable dataset
ImportableDatas=Importable dataset
SelectExportDataSet=Choose dataset you want to export...
SelectImportDataSet=Choose dataset you want to import...
SelectExportFields=Choose fields you want to export, or select a predefined export profile
SelectImportFields=Choose source file fields you want to import and their target field in database by moving them up and down with anchor %s, or select a predefined import profil:
NotImportedFields=Fields of source file not imported
SaveExportModel=Save this export profile if you plan to reuse it later...
SaveImportModel=Save this import profile if you plan to reuse it later...
ExportModelName=Export profile name
ExportModelSaved=Export profile saved under name <b>%s</b>.
ExportableFields=Exportable fields
ExportedFields=Exported fields
ImportModelName=Import profile name
ImportModelSaved=Import profile saved under name <b>%s</b>.
ImportableFields=Importable fields
ImportedFields=Imported fields
DatasetToExport=Dataset to export
DatasetToImport=Import file into dataset
NoDiscardedFields=No fields in source file are discarded
Dataset=Dataset
ChooseFieldsOrdersAndTitle=Choose fields order...
FieldsOrder=Fields order
FieldsTitle=Fields title
FieldOrder=Field order
FieldTitle=Field title
ChooseExportFormat=Choose export format
NowClickToGenerateToBuildExportFile=Now, select file format in combo box and click on "Generate" to build export file...
AvailableFormats=Available formats
LibraryShort=Library
LibraryUsed=Library used
LibraryVersion=Version
Step=Step
FormatedImport=Import assistant
FormatedImportDesc1=This area allows to import personalized data, using an assistant to help you in process without technical knowledge.
FormatedImportDesc2=First step is to choose a king of data you want to load, then file to load, then to choose which fields you want to load.
FormatedExport=Export assistant
FormatedExportDesc1=This area allows to export personalized data, using an assistant to help you in process without technical knowledge.
FormatedExportDesc2=First step is to choose a predefined dataset, then to choose which fields you want in your result files, and which order.
FormatedExportDesc3=When data to export are selected, you can define output file format you want to export your data to.
Sheet=Sheet
NoImportableData=No importable data (no module with definitions to allow data imports)
FileSuccessfullyBuilt=Export file generated
SQLUsedForExport=SQL Request used to build export file
LineId=Id of line
LineDescription=Description of line
LineUnitPrice=Unit price of line
LineVATRate=VAT Rate of line
LineQty=Quantity for line
LineTotalHT=Amount net of tax for line
LineTotalTTC=Amount with tax for line
LineTotalVAT=Amount of VAT for line
TypeOfLineServiceOrProduct=Type of line (0=product, 1=service)
FileWithDataToImport=File with data to import
FileToImport=Source file to import
FileMustHaveOneOfFollowingFormat=File to import must have one of following format
DownloadEmptyExample=Download example of empty source file
ChooseFormatOfFileToImport=Choose file format to use as import file format by clicking on picto %s to select it...
ChooseFileToImport=Upload file then click on picto %s to select file as source import file...
SourceFileFormat=Source file format
FieldsInSourceFile=Fields in source file
FieldsInTargetDatabase=Target fields in Dolibarr database (*=mandatory)
Field=Field
NoFields=No fields
MoveField=Move field column number %s
ExampleOfImportFile=Example_of_import_file
SaveImportProfile=Save this import profile
ErrorImportDuplicateProfil=Failed to save this import profile with this name. An existing profile already exists with this name.
ImportSummary=Import setup summary
TablesTarget=Targeted tables
FieldsTarget=Targeted fields
TableTarget=Targeted table
FieldTarget=Targeted field
FieldSource=Source field
DoNotImportFirstLine=Do not import first line of source file
NbOfSourceLines=Number of lines in source file
NowClickToTestTheImport=Check import parameters you have defined. If they are correct, click on button "<b>%s</b>" to launch a simulation of import process (no data will be changed in your database, it's only a simulation for the moment)...
RunSimulateImportFile=Launch the import simulation 
FieldNeedSource=This fiels in database require a data from source file
SomeMandatoryFieldHaveNoSource=Some mandatory fields have no source from data file
InformationOnSourceFile=Information on source file
InformationOnTargetTables=Information on target fields
SelectAtLeastOneField=Switch at least one source field in the column of fields to export
SelectFormat=Choose this import file format
RunImportFile=Launch import file
NowClickToRunTheImport=Check result of import simulation. If everything is ok, launch the definitive import.
DataLoadedWithId=All data will be loaded with the following import id: <b>%s<b>
ErrorMissingMandatoryValue=Mandatory data is empty in source file for field <b>%s</b>.
TooMuchErrors=There is still <b>%s</b> other source lines with errors but output has been limited.
TooMuchWarnings=There is still <b>%s</b> other source lines with warnings but output has been limited.
EmptyLine=Empty line (will be discarded)
CorrectErrorBeforeRunningImport=You must first correct all errors before running definitive import.
FileWasImported=File was imported with number <b>%s</b>. 
YouCanUseImportIdToFindRecord=You can find all imported records in your database by filtering on field <b>import_key='%s'</b>.
NbOfLinesOK=Number of lines with no errors and no warnings: <b>%s</b>.
NbOfLinesImported=Number of lines successfully imported: <b>%s</b>.
DataComeFromNoWhere=Value to insert comes from nowhere in source file.
DataComeFromFileFieldNb=Value to insert comes from field number <b>%s</b> in source file.
DataComeFromIdFoundFromRef=Value that comes from field number <b>%s</b> of source file will be used to find id of parent object to use (So the objet <b>%s</b> that has the ref. from source file must exists into Dolibarr).
DataComeFromIdFoundFromCodeId=Code that comes from field number <b>%s</b> of source file will be used to find id of parent object to use (So the code from source file must exists into dictionnary <b>%s</b>). Note that if you know id, you can also use it into source file instead of code. Import should work in both cases. 
DataIsInsertedInto=Data coming from source file will be inserted into the following field:
DataIDSourceIsInsertedInto=The id of parent object found using the data in source file, will be inserted into the following field:
DataCodeIDSourceIsInsertedInto=The id of parent line found from code, will be inserted into following field:
SourceRequired=Data value is mandatory
SourceExample=Example of possible data value
ExampleAnyRefFoundIntoElement=Any ref found for element <b>%s</b>
ExampleAnyCodeOrIdFoundIntoDictionnary=Any code (or id) found into dictionnary <b>%s</b>
CSVFormatDesc=<b>Comma Separated Value</b> file format (.csv).<br>This is a text file format where fields are separated by separator [ %s ]. If separator is found inside a field content, field is rounded by round character [ %s ]. Escape character to escape round character is [ %s ].
Excel95FormatDesc=<b>Excel</b> file format (.xls)<br>This is native Excel 95 format (BIFF5).
Excel2007FormatDesc=<b>Excel</b> file format (.xlsx)<br>This is native Excel 2007 format (SpreadsheetML).
TsvFormatDesc=<b>Tab Separated Value</b> file format (.tsv)<br>This is a text file format where fields are separated by a tabulator [tab].
ExportFieldAutomaticallyAdded=Field <b>%s</b> was automatically added. It will avoid you to have similar lines to be treated as duplicate records (with this field added, all ligne will own its own id and will differ).
CsvOptions=Csv Options
Separator=Separator
Enclosure=Enclosure