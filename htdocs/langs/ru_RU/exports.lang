# Dolibarr language file - Source file is en_US - exports
ExportsArea=Экспорт
ImportArea=Import
NewExport=New Export
NewImport=New Import
ExportableDatas=Экспортировать данные
ImportableDatas=ИМПОРТИРОВАННАЯ данных
SelectExportDataSet=Выберите набор данных вы хотите экспортировать ...
SelectImportDataSet=Выбор данных, вы хотите импортировать ...
SelectExportFields=Choose the fields you want to export, or select a predefined export profile
SelectImportFields=Choose the source file fields you want to import and their target field in database by moving them up and down with anchor %s, or select a predefined import profile:
NotImportedFields=Области исходный файл не импортируется
SaveExportModel=Save your selections as an export profile/template (for reuse).
SaveImportModel=Save this import profile (for reuse) ...
ExportModelName=Экспорт имя профиля
ExportModelSaved=Export profile saved as <b>%s</b>.
ExportableFields=Экспортируемых полей
ExportedFields=Экспортируемые поля
ImportModelName=Импорт имя профиля
ImportModelSaved=Import profile saved as <b>%s</b>.
DatasetToExport=Dataset экспорта
DatasetToImport=Набор данных для импорта
ChooseFieldsOrdersAndTitle=Выбрать поля порядке ...
FieldsTitle=Поля заголовка
FieldTitle=Поле название
NowClickToGenerateToBuildExportFile=Now, select the file format in the combo box and click on "Generate" to build the export file...
AvailableFormats=Available Formats
LibraryShort=Библиотека
Step=Шаг
FormatedImport=Import Assistant
FormatedImportDesc1=This module allows you to update existing data or add new objects into the database from a file without technical knowledge, using an assistant.
FormatedImportDesc2=First step is to choose the kind of data you want to import, then the format of the source file, then the fields you want to import.
FormatedExport=Export Assistant
FormatedExportDesc1=These tools allow the export of personalized data using an assistant, to help you in the process without requiring technical knowledge.
FormatedExportDesc2=First step is to choose a predefined dataset, then which fields you want to export, and in which order.
FormatedExportDesc3=When data to export are selected, you can choose the format of the output file.
Sheet=Лист
NoImportableData=Нет данных ввозимый (без модуля с определениями разрешить импорт данных)
FileSuccessfullyBuilt=File generated
SQLUsedForExport=SQL Request used to extract data
LineId=Идентификатор строки
LineLabel=Label of line
LineDescription=Описание строки
LineUnitPrice=Цена за единицу линии
LineVATRate=Ставка НДС в строке
LineQty=Кол-во в строке
LineTotalHT=Amount excl. tax for line
LineTotalTTC=Сумма налога с на линию
LineTotalVAT=Сумма налога на добавленную стоимость по строке
TypeOfLineServiceOrProduct=Тип линии (0= продукт, услуга 1=)
FileWithDataToImport=Файл с данными для импорта
FileToImport=Исходный файл для импорта
FileMustHaveOneOfFollowingFormat=File to import must have one of following formats
DownloadEmptyExample=Download template file with field content information (* are mandatory fields)
ChooseFormatOfFileToImport=Choose the file format to use as import file format by clicking on the %s icon to select it...
ChooseFileToImport=Upload file then click on the %s icon to select file as source import file...
SourceFileFormat=Формат исходного файла
FieldsInSourceFile=Поля в исходном файле
FieldsInTargetDatabase=Целевые поля в БД системы Dolibarr  (жирным - обязательные)
Field=Поле
NoFields=Нет поля
MoveField=Перемещение поля %s номер столбца
ExampleOfImportFile=Example_of_import_file
SaveImportProfile=Сохранить импорт профиля
ErrorImportDuplicateProfil=Не удалось сохранить импорт профиль с таким именем. Существующий профиль уже существует с таким названием.
TablesTarget=Целевые таблицы
FieldsTarget=Целевые поля
FieldTarget=Целевые области
FieldSource=Источник области
NbOfSourceLines=Количество строк в исходном файле
NowClickToTestTheImport=Check that the file format (field and string delimiters) of your file matches the options shown and that you have omitted the header line, or these will be flagged as errors in the following simulation.<br>Click on the "<b>%s</b>" button to run a check of the file structure/contents and simulate the import process.<br><b>No data will be changed in your database</b>.
RunSimulateImportFile=Run Import Simulation
FieldNeedSource=This field requires data from the source file
SomeMandatoryFieldHaveNoSource=Некоторые обязательные поля не имеют источника из файла данных
InformationOnSourceFile=Информация об исходном файле
InformationOnTargetTables=Информация о целевых полей
SelectAtLeastOneField=Switch по крайней мере один источник поля в колонке полей для экспорта
SelectFormat=Выберите этот формат файла для импорта
RunImportFile=Import Data
NowClickToRunTheImport=Check the results of the import simulation. Correct any errors and re-test.<br>When the simulation reports no errors you may proceed to import the data into the database.
DataLoadedWithId=The imported data will have an additional field in each database table with this import id: <b>%s</b>, to allow it to be searchable in the case of investigating a problem related to this import.
ErrorMissingMandatoryValue=Mandatory data is empty in the source file for field <b>%s</b>.
TooMuchErrors=There are still <b>%s</b> other source lines with errors but output has been limited.
TooMuchWarnings=There are still <b>%s</b> other source lines with warnings but output has been limited.
EmptyLine=Пустые строки (будет использоваться)
CorrectErrorBeforeRunningImport=You <b>must</b> correct all errors <b>before</b> running the definitive import.
FileWasImported=Файл был импортирован с номером <b>%s.</b>
YouCanUseImportIdToFindRecord=You can find all the imported records in your database by filtering on field <b>import_key='%s'</b>.
NbOfLinesOK=Количество строк, без ошибок и предупреждений нет: <b>%s.</b>
NbOfLinesImported=Количество линий успешно импортированы: <b>%s.</b>
DataComeFromNoWhere=Соотношение вставить приходит из ниоткуда в исходном файле.
DataComeFromFileFieldNb=Соотношение вставить происходит от области число <b>%s</b> в исходном файле.
DataComeFromIdFoundFromRef=Value that comes from field number <b>%s</b> of source file will be used to find the id of the parent object to use (so the object <b>%s</b> that has the ref. from source file must exist in the database).
DataComeFromIdFoundFromCodeId=Code that comes from field number <b>%s</b> of source file will be used to find the id of the parent object to use (so the code from source file must exist in the dictionary <b>%s</b>). Note that if you know the id, you can also use it in the source file instead of the code. Import should work in both cases.
DataIsInsertedInto=Данные поступившие от исходного файла будет вставлено в следующее поле:
DataIDSourceIsInsertedInto=The id of parent object was found using the data in the source file, will be inserted into the following field:
DataCodeIDSourceIsInsertedInto=Идентификатор материнской линии обнаружил в коде, будут включены в следующее поле:
SourceRequired=Данные значения является обязательным
SourceExample=Пример возможных значений данных
ExampleAnyRefFoundIntoElement=Любая ссылка на элемент найден <b>%s</b>
ExampleAnyCodeOrIdFoundIntoDictionary=Код (или ID) найден в словаре в словаре <b>%s</b>
CSVFormatDesc=<b>Comma Separated Value</b> file format (.csv).<br>This is a text file format where fields are separated by a separator [ %s ]. If separator is found inside a field content, field is rounded by round character [ %s ]. Escape character to escape round character is [ %s ].
Excel95FormatDesc=<b>Excel</b> file format (.xls)<br>This is the native Excel 95 format (BIFF5).
Excel2007FormatDesc=<b>Excel</b> file format (.xlsx)<br>This is the native Excel 2007 format (SpreadsheetML).
TsvFormatDesc=<b>Tab Separated Value</b> file format (.tsv)<br>This is a text file format where fields are separated by a tabulator [tab].
ExportFieldAutomaticallyAdded=Field <b>%s</b> was automatically added. It will avoid you to have similar lines to be treated as duplicate record (with this field added, all lines will own their own id and will differ).
CsvOptions=CSV format options
Separator=Field Separator
Enclosure=String Delimiter
SpecialCode=Special code
ExportStringFilter=%% allows replacing one or more characters in the text
ExportDateFilter=YYYY, YYYYMM, YYYYMMDD: filters by one year/month/day<br>YYYY+YYYY, YYYYMM+YYYYMM, YYYYMMDD+YYYYMMDD: filters over a range of years/months/days<br> > YYYY, > YYYYMM, > YYYYMMDD: filters on all following years/months/days<br> < YYYY, < YYYYMM, < YYYYMMDD: filters on all previous years/months/days
ExportNumericFilter=NNNNN filters by one value<br>NNNNN+NNNNN filters over a range of values<br>< NNNNN filters by lower values<br>> NNNNN filters by higher values
ImportFromLine=Import starting from line number
EndAtLineNb=End at line number
ImportFromToLine=Limit range (From - To). Eg. to omit header line(s).
SetThisValueTo2ToExcludeFirstLine=For example, set this value to 3 to exclude the 2 first lines.<br>If the header lines are NOT omitted, this will result in multiple errors in the Import Simulation.
KeepEmptyToGoToEndOfFile=Keep this field empty to process all lines to the end of the file.
SelectPrimaryColumnsForUpdateAttempt=Select column(s) to use as primary key for an UPDATE import
UpdateNotYetSupportedForThisImport=Update is not supported for this type of import (only insert)
NoUpdateAttempt=No update attempt was performed, only insert
ImportDataset_user_1=Users (employees or not) and properties
ComputedField=Вычисленное поле
## filters
SelectFilterFields=If you want to filter on some values, just input values here.
FilteredFields=Filtered fields
FilteredFieldsValues=Значение для фильтрации
FormatControlRule=Format control rule
## imports updates
KeysToUseForUpdates=Key (column) to use for <b>updating</b> existing data
NbInsert=Number of inserted lines: %s
NbUpdate=Number of updated lines: %s
MultipleRecordFoundWithTheseFilters=Multiple records have been found with these filters: %s
